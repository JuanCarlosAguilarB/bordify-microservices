name: Build CI/CD flow  # Name of the workflow

on: # When to run the workflow
    push:   # Run the workflow on push
        branches:
            - master
    pull_request:   # Run the workflow on pull request
        branches:
            - master

jobs: # List of jobs
  build:  # Job name, it can be any name

    runs-on: ubuntu-latest # where the job will run

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - run: echo "ðŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "ðŸ’¡ The ${{ github.sha }} commit has been checked out."
      - run: echo "ðŸ’¡ The ${{ github.actor }} actor is running the workflow."
      - run : echo "ðŸ’¡The ${{ github.ref }} ref is being used."

      - run: | # Run multiple commands
          echo "ðŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."
          echo "ðŸ’¡ The ${{ github.sha }} commit has been checked out."
          echo "ðŸ’¡ The ${{ github.actor }} actor is running the workflow."


      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      # for permisions denied
      - name: Make gradlew executable
        run: chmod +x ./gradlew


      # cache
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: clean project
        run: ./gradlew clean

      - name: Build with gradle
        run: ./gradlew build

      - name: Run tests
        run: ./gradlew test
